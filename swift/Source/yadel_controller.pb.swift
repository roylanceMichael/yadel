/*
 * DO NOT EDIT.
 *
 * Generated by the protocol buffer compiler.
 * Source: yadel_controller.proto
 *
 */

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _1: SwiftProtobuf.ProtobufAPIVersion_1 {}
  typealias Version = _1
}

fileprivate let _protobuf_package = "org.roylance.yadel"

public struct Org_Roylance_Yadel_CommonAction: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".CommonAction"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "request"),
    2: .same(proto: "response"),
  ]

  private class _StorageClass {
    var _request: Org_Roylance_Yadel_UIYadelRequest? = nil
    var _response: Org_Roylance_Yadel_UIYadelResponse? = nil

    init() {}

    init(copying source: _StorageClass) {
      _request = source._request
      _response = source._response
    }
  }

  private var _storage = _StorageClass()

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var request: Org_Roylance_Yadel_UIYadelRequest {
    get {return _storage._request ?? Org_Roylance_Yadel_UIYadelRequest()}
    set {_uniqueStorage()._request = newValue}
  }
  public var hasRequest: Bool {
    return _storage._request != nil
  }
  public mutating func clearRequest() {
    return _storage._request = nil
  }

  public var response: Org_Roylance_Yadel_UIYadelResponse {
    get {return _storage._response ?? Org_Roylance_Yadel_UIYadelResponse()}
    set {_uniqueStorage()._response = newValue}
  }
  public var hasResponse: Bool {
    return _storage._response != nil
  }
  public mutating func clearResponse() {
    return _storage._response = nil
  }

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._request)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._response)
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._request {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._response {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public func _protobuf_generated_isEqualTo(other: Org_Roylance_Yadel_CommonAction) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_storage, other_storage) in
        if _storage._request != other_storage._request {return false}
        if _storage._response != other_storage._response {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

public struct Org_Roylance_Yadel_ReportController: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".ReportController"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "delete_dag"),
    2: .same(proto: "current"),
    3: .standard(proto: "get_dag_status"),
  ]

  private class _StorageClass {
    var _deleteDag: Org_Roylance_Yadel_CommonAction? = nil
    var _current: Org_Roylance_Yadel_CommonAction? = nil
    var _getDagStatus: Org_Roylance_Yadel_CommonAction? = nil

    init() {}

    init(copying source: _StorageClass) {
      _deleteDag = source._deleteDag
      _current = source._current
      _getDagStatus = source._getDagStatus
    }
  }

  private var _storage = _StorageClass()

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var deleteDag: Org_Roylance_Yadel_CommonAction {
    get {return _storage._deleteDag ?? Org_Roylance_Yadel_CommonAction()}
    set {_uniqueStorage()._deleteDag = newValue}
  }
  public var hasDeleteDag: Bool {
    return _storage._deleteDag != nil
  }
  public mutating func clearDeleteDag() {
    return _storage._deleteDag = nil
  }

  public var current: Org_Roylance_Yadel_CommonAction {
    get {return _storage._current ?? Org_Roylance_Yadel_CommonAction()}
    set {_uniqueStorage()._current = newValue}
  }
  public var hasCurrent: Bool {
    return _storage._current != nil
  }
  public mutating func clearCurrent() {
    return _storage._current = nil
  }

  public var getDagStatus: Org_Roylance_Yadel_CommonAction {
    get {return _storage._getDagStatus ?? Org_Roylance_Yadel_CommonAction()}
    set {_uniqueStorage()._getDagStatus = newValue}
  }
  public var hasGetDagStatus: Bool {
    return _storage._getDagStatus != nil
  }
  public mutating func clearGetDagStatus() {
    return _storage._getDagStatus = nil
  }

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._deleteDag)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._current)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._getDagStatus)
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._deleteDag {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._current {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._getDagStatus {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public func _protobuf_generated_isEqualTo(other: Org_Roylance_Yadel_ReportController) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_storage, other_storage) in
        if _storage._deleteDag != other_storage._deleteDag {return false}
        if _storage._current != other_storage._current {return false}
        if _storage._getDagStatus != other_storage._getDagStatus {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}
