/*
 * DO NOT EDIT.
 *
 * Generated by the protocol buffer compiler.
 * Source: yadel_controller.proto
 *
 */

import Foundation
import SwiftProtobuf


public struct Org_Roylance_Yadel_CommonAction: SwiftProtobuf.Message, SwiftProtobuf.Proto3Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
  public var swiftClassName: String {return "Org_Roylance_Yadel_CommonAction"}
  public var protoMessageName: String {return "CommonAction"}
  public var protoPackageName: String {return "org.roylance.yadel"}
  public static let _protobuf_fieldNames: FieldNameMap = [
    1: .same(proto: "request", swift: "request"),
    2: .same(proto: "response", swift: "response"),
  ]

  private class _StorageClass {
    typealias ExtendedMessage = Org_Roylance_Yadel_CommonAction
    var _request: Org_Roylance_Yadel_UIYadelRequest? = nil
    var _response: Org_Roylance_Yadel_UIYadelResponse? = nil

    init() {}

    func decodeField<T: SwiftProtobuf.FieldDecoder>(setter: inout T, protoFieldNumber: Int) throws {
      switch protoFieldNumber {
      case 1: try setter.decodeSingularMessageField(fieldType: Org_Roylance_Yadel_UIYadelRequest.self, value: &_request)
      case 2: try setter.decodeSingularMessageField(fieldType: Org_Roylance_Yadel_UIYadelResponse.self, value: &_response)
      default: break
      }
    }

    func traverse(visitor: SwiftProtobuf.Visitor) throws {
      if let v = _request {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _response {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _request != other._request {return false}
      if _response != other._response {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._request = _request
      clone._response = _response
      return clone
    }
  }

  private var _storage = _StorageClass()


  public var request: Org_Roylance_Yadel_UIYadelRequest {
    get {return _storage._request ?? Org_Roylance_Yadel_UIYadelRequest()}
    set {_uniqueStorage()._request = newValue}
  }
  public var hasRequest: Bool {
    return _storage._request != nil
  }
  public mutating func clearRequest() {
    return _storage._request = nil
  }

  public var response: Org_Roylance_Yadel_UIYadelResponse {
    get {return _storage._response ?? Org_Roylance_Yadel_UIYadelResponse()}
    set {_uniqueStorage()._response = newValue}
  }
  public var hasResponse: Bool {
    return _storage._response != nil
  }
  public mutating func clearResponse() {
    return _storage._response = nil
  }

  public init() {}

  public mutating func _protoc_generated_decodeField<T: SwiftProtobuf.FieldDecoder>(setter: inout T, protoFieldNumber: Int) throws {
    try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: SwiftProtobuf.Visitor) throws {
    try _storage.traverse(visitor: visitor)
  }

  public func _protoc_generated_isEqualTo(other: Org_Roylance_Yadel_CommonAction) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

public struct Org_Roylance_Yadel_ReportController: SwiftProtobuf.Message, SwiftProtobuf.Proto3Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
  public var swiftClassName: String {return "Org_Roylance_Yadel_ReportController"}
  public var protoMessageName: String {return "ReportController"}
  public var protoPackageName: String {return "org.roylance.yadel"}
  public static let _protobuf_fieldNames: FieldNameMap = [
    1: .unique(proto: "delete_dag", json: "deleteDag", swift: "deleteDag"),
    2: .same(proto: "current", swift: "current"),
    3: .unique(proto: "get_dag_status", json: "getDagStatus", swift: "getDagStatus"),
  ]

  private class _StorageClass {
    typealias ExtendedMessage = Org_Roylance_Yadel_ReportController
    var _deleteDag: Org_Roylance_Yadel_CommonAction? = nil
    var _current: Org_Roylance_Yadel_CommonAction? = nil
    var _getDagStatus: Org_Roylance_Yadel_CommonAction? = nil

    init() {}

    func decodeField<T: SwiftProtobuf.FieldDecoder>(setter: inout T, protoFieldNumber: Int) throws {
      switch protoFieldNumber {
      case 1: try setter.decodeSingularMessageField(fieldType: Org_Roylance_Yadel_CommonAction.self, value: &_deleteDag)
      case 2: try setter.decodeSingularMessageField(fieldType: Org_Roylance_Yadel_CommonAction.self, value: &_current)
      case 3: try setter.decodeSingularMessageField(fieldType: Org_Roylance_Yadel_CommonAction.self, value: &_getDagStatus)
      default: break
      }
    }

    func traverse(visitor: SwiftProtobuf.Visitor) throws {
      if let v = _deleteDag {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _current {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _getDagStatus {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _deleteDag != other._deleteDag {return false}
      if _current != other._current {return false}
      if _getDagStatus != other._getDagStatus {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._deleteDag = _deleteDag
      clone._current = _current
      clone._getDagStatus = _getDagStatus
      return clone
    }
  }

  private var _storage = _StorageClass()


  public var deleteDag: Org_Roylance_Yadel_CommonAction {
    get {return _storage._deleteDag ?? Org_Roylance_Yadel_CommonAction()}
    set {_uniqueStorage()._deleteDag = newValue}
  }
  public var hasDeleteDag: Bool {
    return _storage._deleteDag != nil
  }
  public mutating func clearDeleteDag() {
    return _storage._deleteDag = nil
  }

  public var current: Org_Roylance_Yadel_CommonAction {
    get {return _storage._current ?? Org_Roylance_Yadel_CommonAction()}
    set {_uniqueStorage()._current = newValue}
  }
  public var hasCurrent: Bool {
    return _storage._current != nil
  }
  public mutating func clearCurrent() {
    return _storage._current = nil
  }

  public var getDagStatus: Org_Roylance_Yadel_CommonAction {
    get {return _storage._getDagStatus ?? Org_Roylance_Yadel_CommonAction()}
    set {_uniqueStorage()._getDagStatus = newValue}
  }
  public var hasGetDagStatus: Bool {
    return _storage._getDagStatus != nil
  }
  public mutating func clearGetDagStatus() {
    return _storage._getDagStatus = nil
  }

  public init() {}

  public mutating func _protoc_generated_decodeField<T: SwiftProtobuf.FieldDecoder>(setter: inout T, protoFieldNumber: Int) throws {
    try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: SwiftProtobuf.Visitor) throws {
    try _storage.traverse(visitor: visitor)
  }

  public func _protoc_generated_isEqualTo(other: Org_Roylance_Yadel_ReportController) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}
