akka {
  log-dead-letters = on
  loglevel = "debug"

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    serializers {
      java = "akka.serialization.JavaSerializer"
      proto = "akka.remote.serialization.ProtobufSerializer"
    }
  }

  remote {
    maximum-payload-bytes = 30000000 bytes

    enabled-transports = ["akka.remote.netty.ssl"]
    netty.tcp {
      enable-ssl = true
    }
    netty.ssl = ${akka.remote.netty.tcp}
    netty.ssl {
      enable-ssl = true
      message-frame-size =  30000000b
      send-buffer-size =  30000000b
      receive-buffer-size =  30000000b
      maximum-frame-size = 30000000b

      security {
        key-store = "yadel.keystore"
        key-store-password = "supersecret"
        key-password = "supersecret"
        trust-store = "yadel.truststore"
        trust-store-password = "supersecret"
        protocol = "TLSv1"
        random-number-generator = "AES128CounterSecureRNG"
        enabled-algorithms = ["TLS_RSA_WITH_AES_128_CBC_SHA"]
      }
    }
    log-remote-lifecycle-events = off

    transport-failure-detector {
      heartbeat-interval = 30 s   # default 4s
      acceptable-heartbeat-pause = 30 s  # default 10s
    }
  }

  cluster {
    auto-down-unreachable-after = 40s
  }
}